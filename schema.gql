# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""銀行機構"""
type Bank implements Basic {
  """代碼"""
  code: String

  """Create Date Time"""
  createdAt: DateTime

  """Delete Date Time"""
  deleteAt: DateTime

  """事件"""
  events: [Event]

  """id"""
  id: Float

  """名稱"""
  name: String

  """Update Date Time"""
  updatedAt: DateTime
}

"""銀行機構Input"""
input BankInput {
  """id"""
  id: Float
}

"""基礎物件"""
interface Basic {
  """Create Date Time"""
  createdAt: DateTime

  """Delete Date Time"""
  deleteAt: DateTime

  """id"""
  id: Float

  """Update Date Time"""
  updatedAt: DateTime
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""事件"""
type Event implements Basic {
  """銀行機構"""
  bank: Bank

  """Create Date Time"""
  createdAt: DateTime

  """Delete Date Time"""
  deleteAt: DateTime

  """id"""
  id: Float

  """商品"""
  item: String

  """通知"""
  notifications: [Notification]

  """Update Date Time"""
  updatedAt: DateTime

  """使用者"""
  user: User
}

"""事件Input"""
input EventInput {
  """銀行機構"""
  bank: BankInput

  """id"""
  id: Float

  """商品"""
  item: String

  """通知"""
  notifications: [NotificationInput]

  """使用者"""
  user: UserInput
}

type Mutation {
  """刪除事件"""
  removeEvent(id: Float): Event

  """刪除通知"""
  removeNotification(id: Float): Notification

  """刪除使用者"""
  removeUser(id: Float): User

  """儲存事件"""
  saveEvent(event: EventInput): Event

  """儲存通知"""
  saveNotification(notification: NotificationInput): Notification

  """儲存使用者"""
  saveUser(user: UserInput): User
}

"""通知"""
type Notification implements Basic {
  """Create Date Time"""
  createdAt: DateTime

  """Delete Date Time"""
  deleteAt: DateTime

  """事件"""
  event: Event

  """發生時間"""
  happened_time: DateTime

  """id"""
  id: Float

  """訊息"""
  message: String

  """通知時間"""
  notif_time: DateTime

  """重複類型"""
  repeatType: String

  """tag顏色"""
  tagColor: String

  """tag文字"""
  tagText: String

  """文字顏色"""
  textColor: String

  """通知類型"""
  type: String

  """Update Date Time"""
  updatedAt: DateTime
}

"""事件Input"""
input NotificationInput {
  """發生時間"""
  happened_time: DateTime

  """id"""
  id: Float

  """訊息"""
  message: String

  """通知時間"""
  notif_time: DateTime

  """通知類型"""
  type: String
}

type Query {
  """依id取得銀行機構"""
  bank(id: Float): Bank

  """依代碼(code)取得銀行機構"""
  bankByCode(code: String): Bank

  """依條件取得所有銀行機構"""
  banks: [Bank]

  """依ID取得事件"""
  event(id: Float, userId: Float): Event

  """依條件取得所有事件"""
  events(userId: Float): [Event]

  """依ID取得通知"""
  notification(id: Float): Notification

  """依條件取得通知"""
  notifications(eventId: Float, userId: Float): [Notification]

  """依ID取得使用者"""
  user(id: Float): User

  """依Email取得使用者"""
  userByEmail(email: String): User

  """取得所有使用者"""
  users: [User]
}

"""使用者"""
type User implements Basic {
  """Create Date Time"""
  createdAt: DateTime

  """Delete Date Time"""
  deleteAt: DateTime

  """Email"""
  email: String

  """事件"""
  events: [Event]

  """id"""
  id: Float

  """Line使用者ID"""
  lineUserId: String

  """Update Date Time"""
  updatedAt: DateTime
}

"""使用者Input"""
input UserInput {
  """id"""
  id: Float
}
