# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""每月資料"""
type AmountByMonth {
  """已結算金額"""
  closedAmount: Float

  """總金額"""
  totalAmount: Float

  """年/月"""
  year_month: String
}

"""銀行機構"""
type Bank implements Basic {
  """代碼"""
  code: String

  """Create Date Time"""
  createdAt: DateTime

  """Delete Date Time"""
  deleteAt: DateTime

  """事件"""
  events: [Event]

  """id"""
  id: Float

  """名稱"""
  name: String

  """Update Date Time"""
  updatedAt: DateTime
}

"""銀行機構Input"""
input BankInput {
  """id"""
  id: Float
}

"""基礎物件"""
interface Basic {
  """Create Date Time"""
  createdAt: DateTime

  """Delete Date Time"""
  deleteAt: DateTime

  """id"""
  id: Float

  """Update Date Time"""
  updatedAt: DateTime
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""事件"""
type Event implements Basic {
  """銀行機構"""
  bank: Bank

  """Create Date Time"""
  createdAt: DateTime

  """Delete Date Time"""
  deleteAt: DateTime

  """id"""
  id: Float

  """商品"""
  item: String

  """通知"""
  notifications: [Notification]

  """Update Date Time"""
  updatedAt: DateTime

  """使用者"""
  user: User
}

"""事件Input"""
input EventInput {
  """銀行機構"""
  bank: BankInput

  """id"""
  id: Float

  """商品"""
  item: String

  """通知"""
  notifications: [NotificationInput]

  """使用者"""
  user: UserInput
}

"""LineLog"""
type LineLog {
  """Line發送訊息方法"""
  action: String
  createdAt: DateTime

  """錯誤訊息"""
  errorMsg: String
  id: Float

  """發送訊息"""
  messageJsonString: String

  """發送對象"""
  toJsonString: String

  """uuid"""
  uuid: String
}

"""Log"""
type Log {
  createdAt: DateTime
  entityId: Float
  entityJsonString: String
  entityName: String
  errorMessage: String
  fieldName: String
  id: Float
  operationName: String
  operationType: String
  sqlAction: String
  userDisplayName: String
  userEmail: String
  uuid: String
  variablesJsonString: String
}

type Mutation {
  """刪除事件"""
  removeEvent(id: Float): Event

  """刪除通知"""
  removeNotification(id: Float): Notification

  """刪除通知紀錄"""
  removeNotifLog(id: Float): NotifLog

  """刪除"""
  removeRecord(id: Float): Record

  """刪除使用者"""
  removeUser(id: Float): User

  """儲存事件"""
  saveEvent(event: EventInput): Event

  """儲存通知"""
  saveNotification(notification: NotificationInput): Notification

  """儲存通知紀錄"""
  saveNotifLog(notifLog: NotifLogInput): NotifLog

  """儲存"""
  saveRecord(record: RecordInput): Record

  """儲存使用者"""
  saveUser(user: UserInput): User
}

"""通知"""
type Notification implements Basic {
  """Create Date Time"""
  createdAt: DateTime

  """cron時間字串"""
  cronTimeString: String

  """Delete Date Time"""
  deleteAt: DateTime

  """事件"""
  event: Event

  """發生時間"""
  happened_time: DateTime

  """id"""
  id: Float

  """訊息"""
  message: String

  """通知時間"""
  notif_time: DateTime

  """通知紀錄"""
  notifLogs: [NotifLog]

  """重複類型"""
  repeatType: String

  """tag顏色"""
  tagColor: String

  """tag文字"""
  tagText: String

  """文字顏色"""
  textColor: String

  """通知類型"""
  type: String

  """uid"""
  uid: String

  """Update Date Time"""
  updatedAt: DateTime
}

"""通知Input"""
input NotificationInput {
  """發生時間"""
  happened_time: DateTime

  """id"""
  id: Float

  """訊息"""
  message: String

  """通知時間"""
  notif_time: DateTime

  """重複類型"""
  repeatType: String

  """tag顏色"""
  tagColor: String

  """tag文字"""
  tagText: String

  """文字顏色"""
  textColor: String

  """通知類型"""
  type: String

  """uid"""
  uid: String
}

"""通知紀錄"""
type NotifLog implements Basic {
  """實際通知時間"""
  actual_notif_time: DateTime

  """Create Date Time"""
  createdAt: DateTime

  """cron時間字串"""
  cronTimeString: String

  """Delete Date Time"""
  deleteAt: DateTime

  """id"""
  id: Float

  """訊息"""
  message: String

  """所屬事件"""
  notification: Notification

  """Update Date Time"""
  updatedAt: DateTime
}

"""通知紀錄Input"""
input NotifLogInput {
  """實際通知時間"""
  actual_notif_time: DateTime

  """cron時間字串"""
  cronTimeString: String

  """訊息"""
  message: String

  """通知"""
  notification: NotificationInput
}

type Query {
  """依id取得銀行機構"""
  bank(id: Float): Bank

  """依代碼(code)取得銀行機構"""
  bankByCode(code: String): Bank

  """依條件取得所有銀行機構"""
  banks: [Bank]

  """依ID取得事件"""
  event(id: Float): Event

  """依當前使用者 & ID取得事件"""
  eventByUserAndId(id: Float): Event

  """依條件取得所有事件"""
  events(userId: Float): [Event]

  """依當前使用者取得事件"""
  eventsByUser: [Event]

  """依ID取得"""
  log(id: Float): LineLog

  """依UUID取得"""
  logsByUUID(uuid: String): [LineLog]

  """依ID取得通知"""
  notification(id: Float): Notification

  """依條件取得通知"""
  notifications(eventId: Float, userId: Float): [Notification]

  """依ID取得通知"""
  notifLog(id: Float): NotifLog

  """依條件取得通知紀錄"""
  notifLogs(eventId: Float, notificationId: Float, userId: Float): [NotifLog]

  """依ID取得"""
  record(id: Float): Record

  """依條件取得"""
  records: [Record]

  """計算月總額"""
  recordsAmountByMonth(year_month: String): AmountByMonth

  """依ID取得使用者"""
  user(id: Float): User

  """依Email取得使用者"""
  userByEmail(email: String): User

  """取得所有使用者"""
  users: [User]
}

"""紀錄"""
type Record implements Basic {
  """金額"""
  amount: Float

  """Create Date Time"""
  createdAt: DateTime

  """日期"""
  date: DateTime

  """Delete Date Time"""
  deleteAt: DateTime

  """id"""
  id: Float

  """是否已結算"""
  isClosed: Boolean

  """項目"""
  item: String

  """商家"""
  merchant: String

  """Update Date Time"""
  updatedAt: DateTime

  """紀錄創建者"""
  user: User
}

"""紀錄Input"""
input RecordInput {
  """金額"""
  amount: Float

  """日期"""
  date: DateTime

  """id"""
  id: Float

  """項目"""
  item: String

  """商家"""
  merchant: String

  """紀錄創建者"""
  user: UserInput
}

"""使用者"""
type User implements Basic {
  """是否啟用"""
  active: String

  """Create Date Time"""
  createdAt: DateTime

  """Delete Date Time"""
  deleteAt: DateTime

  """顯示名稱"""
  displayName: String

  """Email"""
  email: String

  """事件"""
  events: [Event]

  """firebaseUid"""
  firebaseUid: String

  """id"""
  id: Float

  """lineUserId"""
  lineUserId: String

  """顯示頭像"""
  photoURL: String

  """角色"""
  role: String

  """Update Date Time"""
  updatedAt: DateTime
}

"""使用者Input"""
input UserInput {
  """是否啟用"""
  active: String

  """顯示名稱"""
  displayName: String

  """Email"""
  email: String

  """firebaseUid"""
  firebaseUid: String

  """id"""
  id: Float

  """lineUserId"""
  lineUserId: String

  """顯示頭像"""
  photoURL: String
}
